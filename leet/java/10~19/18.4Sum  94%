
class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> list = new ArrayList<>();
        Arrays.sort(nums);
    
        if (nums.length < 4 || (long) nums[0] + nums[1] + nums[2] + nums[3] > target ||
            (long) nums[nums.length - 1] + nums[nums.length - 2] + nums[nums.length - 3] + nums[nums.length - 4] < target) {
            return list; 
        }

        for(int i=0; i<nums.length; i++){
            if(i != 0 && nums[i] == nums[i-1]) continue;

            for(int j=i+1; j<nums.length; j++){
                if(j > i+1 && nums[j] == nums[j-1]) continue;
                int k = j + 1;
                int l = nums.length - 1;
                while(k < l){
                    long sum = (long)nums[i] + nums[j] + nums[k] + nums[l];
                    if(sum > target){
                        l--;
                    }
                    else if(sum < target){
                        k++;
                    }
                    else{
                        List<Integer> temp = new ArrayList<>();
                        temp.add(nums[i]);
                        temp.add(nums[j]);
                        temp.add(nums[k]);
                        temp.add(nums[l]);
                        list.add(temp);
                        k++;
                        l--;
                        while(nums[k] == nums[k-1] && k<l) k++;
                        while(nums[l] == nums[l+1] && k<l) l--;
                    }
                }
            }
        }

        return list;
    }
}
