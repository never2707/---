class Solution{
    public ListNode addTwoNumbers(ListNode l1, ListNode l2){
		ListNode head = new ListNode(0);
		ListNode tail = head;
		int carry = 0;
		
		while(l1 != null || l2 != null || carry != 0){
		  int n1 =(l1 != null)? l1.val : 0;
		  int n2 =(l2 != null)? l2.val : 0;
		  int sum = n1 + n2 + carry;
		  int number = sum%10;
		  carry = sum/10;
		  l1 = (l1 != null) ?l1.next :null;
		  l2 = (l2 != null) ?l2.next :null;
		
		  ListNode digit = new ListNode(number);
		  tail.next = digit;
		  tail = tail.next;
		}
	ListNode result = head.next;
	head.next = null;
	return result;
	}
}

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */

